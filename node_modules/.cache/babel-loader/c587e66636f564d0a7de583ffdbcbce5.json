{"ast":null,"code":"var _jsxFileName = \"/Users/atif/Desktop/web/weatherapp/src/components/SearchListComponent.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport { PanelGroup, Panel } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useParams } from 'react-router-dom'; //component to render list of cities on search from navbar component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchListComponent(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState([]); //state for weather data\n\n  const [wpdata, setWpdata] = useState([]); //state for weather pagination data\n\n  const [pageNumber, setPageNumber] = useState(1); //state for page number , initial value is one\n\n  const [totalPages, setTotalPages] = useState(1); // state for total pages\n\n  const pageSize = 3;\n  let {\n    updateSearchId\n  } = useParams(); //capture search id from navbar component\n  //function to get data from weather api\n\n  const getData = async cityId => {\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/find?units=metric&q=${cityId}&APPID=baaff88971c49e8746e3c9e3262fc830`);\n    setWeatherData(res.data.list);\n    setWpdata(getPaginatedData(res.data.list, 3, 3));\n    setTotalPages(Math.ceil(wpdata.length / pageSize));\n  }; //function for getting paginated data\n\n\n  function getPaginatedData(res, size) {\n    size = size || 10;\n    var pages = Math.ceil(res.length / size),\n        items = [];\n\n    for (var p = 1; p <= pages; p++) {\n      var start = Math.round(size * (p - 1));\n      items.push(res.slice(start, start + size));\n    }\n\n    return items;\n  } //call weather api and set data before rendering dom\n\n\n  useEffect(() => {\n    getData(updateSearchId);\n  }, [updateSearchId]); //show data on UI\n\n  const listData = (w, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PanelGroup, {\n        accordion: true,\n        id: \"accordion-uncontrolled-example\",\n        defaultActiveKey: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Panel, {\n          className: \"Panel\",\n          bsStyle: \"info\",\n          eventKey: w,\n          children: [/*#__PURE__*/_jsxDEV(Panel.Heading, {\n            children: /*#__PURE__*/_jsxDEV(Panel.Title, {\n              toggle: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://openweathermap.org/images/flags/${w.sys.country.toLowerCase()}.png`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"     \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 126\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [w.name, \",\", w.sys.country]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"feels like -  \", w.main.feels_like, \", \", w.weather[0].description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `http://openweathermap.org/img/wn/${w.weather[0].icon}@2x.png`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 33\n                  }, this), w.main.temp, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"addbutton\",\n                  onClick: e => props.addRecentlyViewed(w.id),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Panel.Body, {\n            collapsible: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                id: \"customers\",\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Expected weather from : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"wind\",\n                        children: w.main.temp_min\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 75\n                      }, this), \" \\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 45\n                    }, this), \" to \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Max: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"wind\",\n                        children: w.main.temp_max\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 74,\n                        columnNumber: 108\n                      }, this), \" \\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 97\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"Humidity - \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"humidity\",\n                      children: w.main.humidity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 56\n                    }, this), \"%\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\uD83D\\uDCA7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 45\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Pressure : \", w.main.pressure, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Clouds : \", w.weather[0].description, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 51\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Wind: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"wind\",\n                        children: w.wind.speed\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 57\n                      }, this), \" m/s\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Geo Location: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"wind\",\n                        children: [w.coord.lat, \" , \", w.coord.lon]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }; //function to show number of pagination buttons\n\n\n  const paginationButton = (p, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      bsStyle: \"primary\",\n      active: index + 1 === pageNumber,\n      onClick: e => {\n        setPageNumber(index + 1);\n      },\n      children: [index + 1, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  };\n\n  {\n    console.log(weatherData);\n  }\n  {\n    console.log(wpdata);\n  }\n  {\n    console.log(pageNumber);\n  } //renders list only if data is present\n\n  if (weatherData.length > 0 && wpdata.length > 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Array.from(wpdata[pageNumber - 1]).map(listData), wpdata.map(paginationButton)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  } //if data is not present show alert\n  else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-danger\",\n        children: \"Data not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this);\n    }\n}\n\n_s(SearchListComponent, \"fR/y3NezGNCaLe9o3P6O1cs0WbI=\", false, function () {\n  return [useParams];\n});\n\n_c = SearchListComponent;\nexport default SearchListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchListComponent\");","map":{"version":3,"sources":["/Users/atif/Desktop/web/weatherapp/src/components/SearchListComponent.js"],"names":["axios","useState","useEffect","Button","PanelGroup","Panel","React","useParams","SearchListComponent","props","weatherData","setWeatherData","wpdata","setWpdata","pageNumber","setPageNumber","totalPages","setTotalPages","pageSize","updateSearchId","getData","cityId","res","get","data","list","getPaginatedData","Math","ceil","length","size","pages","items","p","start","round","push","slice","listData","w","index","sys","country","toLowerCase","name","main","feels_like","weather","description","icon","temp","e","addRecentlyViewed","id","temp_min","temp_max","humidity","pressure","wind","speed","coord","lat","lon","paginationButton","console","log","Array","from","map"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {useState,useEffect} from 'react'\r\nimport { Button} from \"react-bootstrap\";\r\nimport {PanelGroup,Panel} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\n//component to render list of cities on search from navbar component\r\n\r\nfunction SearchListComponent(props) {\r\n    const [weatherData,setWeatherData] = useState([]); //state for weather data\r\n    const [wpdata,setWpdata] = useState([]); //state for weather pagination data\r\n    const [pageNumber,setPageNumber] = useState(1); //state for page number , initial value is one\r\n    const [totalPages,setTotalPages] = useState(1); // state for total pages\r\n    const pageSize = 3;\r\n\r\n    let {updateSearchId} = useParams(); //capture search id from navbar component\r\n\r\n    //function to get data from weather api\r\n    const getData = async(cityId)=>{\r\n        const res =  await axios.get(`http://api.openweathermap.org/data/2.5/find?units=metric&q=${cityId}&APPID=baaff88971c49e8746e3c9e3262fc830`)\r\n        setWeatherData(res.data.list)\r\n        setWpdata(getPaginatedData(res.data.list,3,3));\r\n        setTotalPages(Math.ceil(wpdata.length/pageSize))\r\n    }\r\n\r\n    //function for getting paginated data\r\n    function getPaginatedData(res,size) {\r\n        size=size||10;\r\n        var pages=Math.ceil( res.length / size),\r\n            items=[];\r\n        for( var p=1; p <= pages; p++) {\r\n            var start= Math.round( size * (p-1) );\r\n            items.push( res.slice(start,start+size) );\r\n        }\r\n        return items;\r\n    }\r\n\r\n    //call weather api and set data before rendering dom\r\n    useEffect(()=> {\r\n        getData(updateSearchId);\r\n    },[updateSearchId]);\r\n\r\n    //show data on UI\r\n    const listData = (w,index)=>{\r\n        return (\r\n            <div>\r\n                <PanelGroup  accordion id=\"accordion-uncontrolled-example\" defaultActiveKey=\"2\">\r\n                    <Panel className=\"Panel\" bsStyle=\"info\"  eventKey={w}>\r\n                        <Panel.Heading>\r\n                            <Panel.Title toggle>\r\n                                <div>\r\n                                    <img  src={`http://openweathermap.org/images/flags/${w.sys.country.toLowerCase()}.png`}/><span>     </span>\r\n                                    <span>{w.name},{w.sys.country}</span>\r\n\r\n                                    <p>feels like -  {w.main.feels_like}, {w.weather[0].description}</p>\r\n                                    <span>\r\n                                <img src={`http://openweathermap.org/img/wn/${w.weather[0].icon}@2x.png`}/>\r\n                                        {w.main.temp}&deg;C\r\n                            </span>\r\n                                    <br/>\r\n                                    <button className=\"addbutton\" onClick={e=>props.addRecentlyViewed(w.id)}>+</button>\r\n                                </div>\r\n                            </Panel.Title>\r\n                        </Panel.Heading>\r\n                        <Panel.Body collapsible>\r\n                            <div>\r\n\r\n                                <table id=\"customers\">\r\n\r\n                                    <tr>\r\n                                        <td><span>Expected weather from : <span\r\n                                            id=\"wind\">{w.main.temp_min}</span> &deg;C</span> to <span>Max: <span\r\n                                            id=\"wind\">{w.main.temp_max}</span> &deg;C</span></td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Humidity - <span id=\"humidity\">{w.main.humidity}</span>%\r\n                                            <span>💧</span> <span>Pressure : {w.main.pressure} </span>\r\n                                            <span><span>Clouds : {w.weather[0].description} </span> </span></td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><span>Wind: <span id=\"wind\">{w.wind.speed}</span> m/s</span></td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><span>Geo Location: <span id=\"wind\">{w.coord.lat} , {w.coord.lon}</span></span></td>\r\n\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                        </Panel.Body>\r\n                    </Panel>\r\n                </PanelGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //function to show number of pagination buttons\r\n    const paginationButton = (p,index)=>{\r\n        return (\r\n            <Button  bsStyle=\"primary\" active={index+1===pageNumber} onClick={e=>{setPageNumber(index+1)}}>{index+1} </Button>\r\n        )\r\n    }\r\n\r\n    {console.log(weatherData)}\r\n    {console.log(wpdata)}\r\n    {console.log(pageNumber)}\r\n\r\n    //renders list only if data is present\r\n    if(weatherData.length>0 && wpdata.length>0){\r\n        return (\r\n            <div>\r\n                {Array.from(wpdata[pageNumber-1]).map(listData)}\r\n                {wpdata.map(paginationButton)}\r\n            </div>\r\n        );\r\n    }\r\n    //if data is not present show alert\r\n    else {\r\n        return(\r\n            <div className=\"alert-danger\">Data not found</div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchListComponent;"]},"metadata":{},"sourceType":"module"}