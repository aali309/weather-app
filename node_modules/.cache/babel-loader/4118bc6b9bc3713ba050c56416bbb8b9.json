{"ast":null,"code":"var _jsxFileName = \"/Users/atif/Desktop/web/weatherapp/src/components/MainComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Panel, PanelGroup } from \"react-bootstrap\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar daylist = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday \", \"Thursday\", \"Friday\", \"Saturday\"];\n\nfunction MainComponent(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState(); //state of weather data\n\n  let id = props.location; //get current location from app component\n  //call api of particular location woth id\n\n  const getData = async id => {\n    const response = await axios.get(`http://api.openweathermap.org/data/2.5/weather?id=${id}&units=metric&APPID=baaff88971c49e8746e3c9e3262fc830`);\n    setWeatherData(response.data);\n  }; //call data function before loading page\n\n\n  useEffect(() => {\n    getData(id);\n  }, [id]);\n  {\n    console.log(weatherData);\n  } //show data on UI if present\n\n  if (weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/images/flags/${weatherData.sys.country.toLowerCase()}.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [weatherData.name, \",\", weatherData.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"feels like - \", weatherData.main.feels_like, \",\", \" \", weatherData.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), weatherData.main.temp - 273.15, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"customers\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Expected weather from :\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wind\",\n                children: weatherData.main.temp_min\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), \" \\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), \" \", \"to\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Max: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wind\",\n                children: [weatherData.main.temp_max, \"-273.15\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 22\n              }, this), \" \", \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Humidity - \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"humidity\",\n              children: weatherData.main.humidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 26\n            }, this), \"%\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Pressure : \", weatherData.main.pressure, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Clouds : \", weatherData.weather[0].description, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Wind: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wind\",\n                children: weatherData.wind.speed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 23\n              }, this), \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Geo Location:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wind\",\n                children: [weatherData.coord.lat, \" , \", weatherData.coord.lon]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(MainComponent, \"WNk7tFlq1EQORw6e2a73bebUJOI=\");\n\n_c = MainComponent;\nexport default MainComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"sources":["/Users/atif/Desktop/web/weatherapp/src/components/MainComponent.js"],"names":["useEffect","useState","useParams","axios","Panel","PanelGroup","React","daylist","MainComponent","props","weatherData","setWeatherData","id","location","getData","response","get","data","console","log","sys","country","toLowerCase","name","main","feels_like","weather","description","icon","temp","temp_min","temp_max","humidity","pressure","wind","speed","coord","lat","lon"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Panel, PanelGroup } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nvar daylist = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday \",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nfunction MainComponent(props) {\r\n  const [weatherData, setWeatherData] = useState(); //state of weather data\r\n\r\n  let id = props.location; //get current location from app component\r\n\r\n  //call api of particular location woth id\r\n  const getData = async (id) => {\r\n    const response = await axios.get(\r\n      `http://api.openweathermap.org/data/2.5/weather?id=${id}&units=metric&APPID=baaff88971c49e8746e3c9e3262fc830`\r\n    );\r\n    setWeatherData(response.data);\r\n  };\r\n\r\n  //call data function before loading page\r\n  useEffect(() => {\r\n    getData(id);\r\n  }, [id]);\r\n\r\n  {\r\n    console.log(weatherData);\r\n  }\r\n\r\n  //show data on UI if present\r\n  if (weatherData) {\r\n    return (\r\n      <div className=\"panel\">\r\n        <div>\r\n          <img\r\n            src={`http://openweathermap.org/images/flags/${weatherData.sys.country.toLowerCase()}.png`}\r\n          />\r\n          <span> </span>\r\n          <span>\r\n            {weatherData.name},{weatherData.sys.country}\r\n          </span>\r\n\r\n          <p>\r\n            feels like - {weatherData.main.feels_like},{\" \"}\r\n            {weatherData.weather[0].description}\r\n          </p>\r\n          <span>\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n            />\r\n            {weatherData.main.temp - 273.15}&deg;C\r\n          </span>\r\n          <br />\r\n        </div>\r\n\r\n        <table id=\"customers\">\r\n          <tr>\r\n            <td>\r\n              <span>\r\n                Expected weather from :{\" \"}\r\n                <span id=\"wind\">{weatherData.main.temp_min}</span> &deg;C\r\n              </span>{\" \"}\r\n              to{\" \"}\r\n              <span>\r\n                Max: <span id=\"wind\">{weatherData.main.temp_max}-273.15</span>{\" \"}\r\n                &deg;C\r\n              </span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              Humidity - <span id=\"humidity\">{weatherData.main.humidity}</span>%\r\n              <span>💧</span>{\" \"}\r\n              <span>Pressure : {weatherData.main.pressure} </span>\r\n              <span>\r\n                <span>Clouds : {weatherData.weather[0].description} </span>{\" \"}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span>\r\n                Wind: <span id=\"wind\">{weatherData.wind.speed}</span> m/s\r\n              </span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span>\r\n                Geo Location:{\" \"}\r\n                <span id=\"wind\">\r\n                  {weatherData.coord.lat} , {weatherData.coord.lon}\r\n                </span>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default MainComponent;\r\n"]},"metadata":{},"sourceType":"module"}