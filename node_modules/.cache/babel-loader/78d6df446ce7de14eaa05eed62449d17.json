{"ast":null,"code":"var _jsxFileName = \"/Users/atif/Desktop/web/weatherapp/src/SearchListComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { PanelGroup, Panel, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchListComponent(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState([]); //state for pagination\n\n  const [page, setPage] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  var daylist = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday \", \"Thursday\", \"Friday\", \"Saturday\"];\n  const [currentDate, setCurrentDate] = useState(\"\"); //const [sunset, setSunset] = useState(\"\");\n  //const [sunrise, setSunrise] = useState(\"\");\n\n  const pageSize = 3;\n  let {\n    updateSearchId\n  } = useParams();\n\n  function calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  function getPaginatedData(res, size, max) {\n    size = size || 10;\n    max = max || 100;\n    size = size > max ? max : size;\n    var pages = Math.ceil(res.length / size),\n        items = [];\n\n    for (var p = 1; p <= pages; p++) {\n      var start = Math.ceil(size * (p - 1));\n      items.push(res.slice(start, start + size));\n    }\n\n    return items;\n  }\n\n  const paginationButton = (p, index) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      bsStyle: \"primary\",\n      active: index + 1 === pageNumber,\n      onClick: e => {\n        setPageNumber(index + 1);\n      },\n      children: [index + 1, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getData = async cityId => {\n    const res = await axios.get(`http://api.openweathermap.org/data/2.5/find?q=${cityId}&units-metric&cnt=50&APPID=5e1cdce741ca74b75f69226cf0c6d37e`);\n    setWeatherData(res.data.list);\n    setPage(getPaginatedData(res.data.list, 3, 3));\n    setTotalPages(Math.ceil(page.length / pageSize));\n  };\n\n  useEffect(() => {\n    var current = new Date();\n    var date = \"\";\n    var date = \"Date: \" + current.getFullYear() + \"/\" + (current.getMonth() + 1) + \"/\" + current.getDate() + \"...Time: \" + current.getHours() + \":\" + current.getMinutes();\n    setCurrentDate(date);\n    getData(updateSearchId);\n  }, [updateSearchId]);\n\n  const listData = (data, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PanelGroup, {\n        accordion: true,\n        id: \"accordion-uncontrolled-example\",\n        defaultActiveKey: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Panel, {\n          className: \"Panel\",\n          bsStyle: \"info\",\n          eventKey: data,\n          children: [/*#__PURE__*/_jsxDEV(Panel.Heading, {\n            children: /*#__PURE__*/_jsxDEV(Panel.Title, {\n              toggle: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://openweathermap.org/images/flags/${data.sys.country.toLowerCase()}.png`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [data.name, \",\", data.sys.country]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"feels like \", Math.floor(data.main.feels_like - 273.15), \"\\xB0C, \", data.weather[0].description]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), Math.floor(data.main.temp - 273.15), \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"addbutton\",\n                  onClick: e => props.addRecentlyViewed(data.id),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Panel.Body, {\n            collapsible: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                id: \"customers\",\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Expected weather from :\", \" \", Math.floor(data.main.temp_min - 273.15), \"\\xB0C\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 23\n                    }, this), \" \", \"to\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Max:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"wind\",\n                        children: [Math.floor(data.main.temp_max - 273.15), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 25\n                      }, this), \" \", \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"date\",\n                      children: currentDate\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"dayoftheweek\",\n                      children: daylist[new Date().getDay()]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Sunrise:\", \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: new Date(data.sys.sunrise * 1000).toLocaleTimeString\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"SunSet:\", \" \", new Date(data.sys.setSunset * 1000).toTimeString]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [\"Humidity - \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      id: \"humidity\",\n                      children: data.main.humidity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 34\n                    }, this), \"%\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\uD83D\\uDCA7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 24\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Pressure : \", data.main.pressure, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Clouds : \", data.weather[0].description, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 25\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Wind: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"wind\",\n                        children: data.wind.speed\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 31\n                      }, this), \" m/s\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Geo Location:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        id: \"wind\",\n                        children: [data.coord.lat, \" , \", data.coord.lon]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  };\n\n  {\n    console.log(weatherData);\n  }\n  {\n    console.log(page);\n  }\n  {\n    console.log(pageNumber);\n  }\n\n  if (weatherData.length != 0 && page.length != 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Array.from(page[pageNumber - 1]).map(listData), page.map(paginationButton)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-danger\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"mark\", {\n          children: \"City you entered can't be found!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(SearchListComponent, \"e/F/BrA3U+3IVUKTWOPPvBYAVhw=\", false, function () {\n  return [useParams];\n});\n\n_c = SearchListComponent;\nexport default SearchListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchListComponent\");","map":{"version":3,"sources":["/Users/atif/Desktop/web/weatherapp/src/SearchListComponent.js"],"names":["React","PanelGroup","Panel","Button","axios","useState","useEffect","useParams","SearchListComponent","props","weatherData","setWeatherData","page","setPage","pageNumber","setPageNumber","totalPages","setTotalPages","daylist","currentDate","setCurrentDate","pageSize","updateSearchId","calCelsius","temp","cell","Math","floor","getPaginatedData","res","size","max","pages","ceil","length","items","p","start","push","slice","paginationButton","index","e","getData","cityId","get","data","list","current","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","listData","sys","country","toLowerCase","name","main","feels_like","weather","description","icon","addRecentlyViewed","id","temp_min","temp_max","getDay","sunrise","toLocaleTimeString","setSunset","toTimeString","humidity","pressure","wind","speed","coord","lat","lon","console","log","Array","from","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { PanelGroup, Panel, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction SearchListComponent(props) {\r\n  const [weatherData, setWeatherData] = useState([]);\r\n  //state for pagination\r\n  const [page, setPage] = useState([]);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  var daylist = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday \",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const [currentDate, setCurrentDate] = useState(\"\");\r\n  //const [sunset, setSunset] = useState(\"\");\r\n  //const [sunrise, setSunrise] = useState(\"\");\r\n  const pageSize = 3;\r\n\r\n  let { updateSearchId } = useParams();\r\n\r\n  function calCelsius(temp) {\r\n    let cell = Math.floor(temp - 273.15);\r\n    return cell;\r\n  }\r\n\r\n  function getPaginatedData(res, size, max) {\r\n    size = size || 10;\r\n    max = max || 100;\r\n    size = size > max ? max : size;\r\n    var pages = Math.ceil(res.length / size),\r\n      items = [];\r\n    for (var p = 1; p <= pages; p++) {\r\n      var start = Math.ceil(size * (p - 1));\r\n      items.push(res.slice(start, start + size));\r\n    }\r\n    return items;\r\n  }\r\n\r\n  const paginationButton = (p, index) => {\r\n    return (\r\n      <Button\r\n        bsStyle=\"primary\"\r\n        active={index + 1 === pageNumber}\r\n        onClick={(e) => {\r\n          setPageNumber(index + 1);\r\n        }}\r\n      >\r\n        {index + 1}{\" \"}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const getData = async (cityId) => {\r\n    const res = await axios.get(\r\n      `http://api.openweathermap.org/data/2.5/find?q=${cityId}&units-metric&cnt=50&APPID=5e1cdce741ca74b75f69226cf0c6d37e`\r\n    );\r\n    setWeatherData(res.data.list);\r\n    setPage(getPaginatedData(res.data.list, 3, 3));\r\n    setTotalPages(Math.ceil(page.length / pageSize));\r\n  };\r\n\r\n  useEffect(() => {\r\n    var current = new Date();\r\n\r\n    var date = \"\";\r\n    var date =\r\n      \"Date: \" +\r\n      current.getFullYear() +\r\n      \"/\" +\r\n      (current.getMonth() + 1) +\r\n      \"/\" +\r\n      current.getDate() +\r\n      \"...Time: \" +\r\n      current.getHours() +\r\n      \":\" +\r\n      current.getMinutes();\r\n    setCurrentDate(date);\r\n    getData(updateSearchId);\r\n  }, [updateSearchId]);\r\n\r\n  const listData = (data, index) => {\r\n    return (\r\n      <div>\r\n        <PanelGroup\r\n          accordion\r\n          id=\"accordion-uncontrolled-example\"\r\n          defaultActiveKey=\"2\"\r\n        >\r\n          <Panel className=\"Panel\" bsStyle=\"info\" eventKey={data}>\r\n            <Panel.Heading>\r\n              <Panel.Title toggle>\r\n                <div>\r\n                  <img\r\n                    src={`http://openweathermap.org/images/flags/${data.sys.country.toLowerCase()}.png`}\r\n                  />\r\n                  <span> </span>\r\n                  <span>\r\n                    {data.name},{data.sys.country}\r\n                  </span>\r\n\r\n                  <p>\r\n                    feels like {Math.floor(data.main.feels_like - 273.15)}\r\n                    &deg;C, {data.weather[0].description}\r\n                  </p>\r\n                  <span>\r\n                    <img\r\n                      src={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\r\n                    />\r\n                    {Math.floor(data.main.temp - 273.15)}&deg;C\r\n                  </span>\r\n                  <br />\r\n                  <button\r\n                    className=\"addbutton\"\r\n                    onClick={(e) => props.addRecentlyViewed(data.id)}\r\n                  >\r\n                    +\r\n                  </button>\r\n                </div>\r\n              </Panel.Title>\r\n            </Panel.Heading>\r\n            <Panel.Body collapsible>\r\n              <div>\r\n                <table id=\"customers\">\r\n                  <tr>\r\n                    <td>\r\n                      <span>\r\n                        Expected weather from :{\" \"}\r\n                        {Math.floor(data.main.temp_min - 273.15)}&deg;C{\" \"}\r\n                      </span>{\" \"}\r\n                      to{\" \"}\r\n                      <span>\r\n                        Max:{\" \"}\r\n                        <span id=\"wind\">\r\n                          {Math.floor(data.main.temp_max - 273.15)}{\" \"}\r\n                        </span>{\" \"}\r\n                        &deg;C\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span id=\"date\">{currentDate}</span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span id=\"dayoftheweek\">\r\n                        {daylist[new Date().getDay()]}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span>\r\n                        Sunrise:{\" \"}\r\n                        <p>\r\n                          {new Date(data.sys.sunrise * 1000).toLocaleTimeString}\r\n                        </p>\r\n                        <span>\r\n                          <p>\r\n                            SunSet:{\" \"}\r\n                            {new Date(data.sys.setSunset * 1000).toTimeString}\r\n                          </p>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      Humidity - <span id=\"humidity\">{data.main.humidity}</span>\r\n                      %<span>💧</span>{\" \"}\r\n                      <span>Pressure : {data.main.pressure} </span>\r\n                      <span>\r\n                        <span>Clouds : {data.weather[0].description} </span>{\" \"}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span>\r\n                        Wind: <span id=\"wind\">{data.wind.speed}</span> m/s\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span>\r\n                        Geo Location:{\" \"}\r\n                        <span id=\"wind\">\r\n                          {data.coord.lat} , {data.coord.lon}\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </Panel.Body>\r\n          </Panel>\r\n        </PanelGroup>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  {\r\n    console.log(weatherData);\r\n  }\r\n  {\r\n    console.log(page);\r\n  }\r\n  {\r\n    console.log(pageNumber);\r\n  }\r\n\r\n  if (weatherData.length != 0 && page.length != 0) {\r\n    return (\r\n      <div>\r\n        {Array.from(page[pageNumber - 1]).map(listData)}\r\n        {page.map(paginationButton)}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"alert-danger\">\r\n        <p>\r\n          <mark>City you entered can't be found!!</mark>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchListComponent;\r\n"]},"metadata":{},"sourceType":"module"}