{"ast":null,"code":"var _jsxFileName = \"/Users/atif/Desktop/web/weatherapp/src/components/MainComponent.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Panel, PanelGroup } from \"react-bootstrap\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar daylist = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday \", \"Thursday\", \"Friday\", \"Saturday\"];\n\nfunction MainComponent(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState(); //state of weather data\n\n  let id = props.location; //get current location from app component\n  //call api of particular location woth id\n\n  const getData = async id => {\n    const response = await axios.get(`http://api.openweathermap.org/data/2.5/weather?id=${id}&units=metric&APPID=baaff88971c49e8746e3c9e3262fc830`);\n    setWeatherData(response.data);\n  }; //call data function before loading page\n\n\n  useEffect(() => {\n    console.log(\"ddddd\");\n    getData(id);\n  }, [id]);\n  {\n    console.log(weatherData);\n  } //show data on UI if present\n\n  if (weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/images/flags/${weatherData.sys.country.toLowerCase()}.png`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"     \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 120\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [weatherData.name, \",\", weatherData.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"feels like -  \", weatherData.main.feels_like, \", \", weatherData.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), weatherData.main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"customers\",\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Expected weather from : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wind\",\n                children: weatherData.main.temp_min\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 59\n              }, this), \" \\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), \" to \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Max: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wind\",\n                children: weatherData.main.temp_max\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 102\n              }, this), \" \\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 91\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Humidity - \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"humidity\",\n              children: weatherData.main.humidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 40\n            }, this), \"%\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Pressure : \", weatherData.main.pressure, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Clouds : \", weatherData.weather[0].description, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 35\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Wind: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wind\",\n                children: weatherData.wind.speed\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 41\n              }, this), \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Geo Location: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"wind\",\n                children: [weatherData.coord.lat, \" , \", weatherData.coord.lon]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n}\n\n_s(MainComponent, \"rip6qfjUxFyXzQYoILNBJR0t3eo=\");\n\n_c = MainComponent;\nexport default MainComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"sources":["/Users/atif/Desktop/web/weatherapp/src/components/MainComponent.js"],"names":["useEffect","useState","useParams","axios","Panel","PanelGroup","React","daylist","MainComponent","props","weatherData","setWeatherData","id","location","getData","response","get","data","console","log","sys","country","toLowerCase","name","main","feels_like","weather","description","icon","temp","temp_min","temp_max","humidity","pressure","wind","speed","coord","lat","lon"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {Panel, PanelGroup} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nvar daylist = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday \",\"Thursday\",\"Friday\",\"Saturday\"];\r\n\r\nfunction MainComponent(props) {\r\n    const [weatherData,setWeatherData] = useState(); //state of weather data\r\n\r\n    let id = props.location ; //get current location from app component\r\n\r\n    //call api of particular location woth id\r\n    const getData = async(id)=>{\r\n        const response =  await axios.get(`http://api.openweathermap.org/data/2.5/weather?id=${id}&units=metric&APPID=baaff88971c49e8746e3c9e3262fc830`)\r\n        setWeatherData(response.data)\r\n    }\r\n\r\n    //call data function before loading page\r\n    useEffect(()=> {\r\n        console.log(\"ddddd\")\r\n        getData(id);\r\n    },[id]);\r\n\r\n    {console.log(weatherData)}\r\n\r\n    //show data on UI if present\r\n    if(weatherData){\r\n        return(\r\n            <div className=\"panel\">\r\n                <div>\r\n                    <img  src={`http://openweathermap.org/images/flags/${weatherData.sys.country.toLowerCase()}.png`}/><span>     </span>\r\n                    <span>{weatherData.name},{weatherData.sys.country}</span>\r\n\r\n                    <p>feels like -  {weatherData.main.feels_like}, {weatherData.weather[0].description}</p>\r\n                    <span>\r\n                                <img src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}/>\r\n                        {weatherData.main.temp}&deg;C\r\n                            </span>\r\n                    <br/>\r\n                </div>\r\n\r\n                <table id=\"customers\">\r\n\r\n                    <tr>\r\n                        <td><span>Expected weather from : <span\r\n                            id=\"wind\">{weatherData.main.temp_min}</span> &deg;C</span> to <span>Max: <span\r\n                            id=\"wind\">{weatherData.main.temp_max}</span> &deg;C</span></td>\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Humidity - <span id=\"humidity\">{weatherData.main.humidity}</span>%\r\n                            <span>💧</span> <span>Pressure : {weatherData.main.pressure} </span>\r\n                            <span><span>Clouds : {weatherData.weather[0].description} </span> </span></td>\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <td><span>Wind: <span id=\"wind\">{weatherData.wind.speed}</span> m/s</span></td>\r\n\r\n                    </tr>\r\n                    <tr>\r\n                        <td><span>Geo Location: <span id=\"wind\">{weatherData.coord.lat} , {weatherData.coord.lon}</span></span></td>\r\n\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default MainComponent;"]},"metadata":{},"sourceType":"module"}